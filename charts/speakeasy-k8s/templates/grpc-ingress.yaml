{{- if and .Values.registry.ingress.enabled .Values.registry.ingress.grpcHostnames -}}
{{- $serviceName := printf "%s-%s" (include "speakeasy-registry.fullname" .) "service" -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-%s" (include "speakeasy-registry.fullname" .) "grpc-ingress" }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/grpc-services: {{ $serviceName }}
    cert-manager.io/cluster-issuer: {{ printf "%s-%s" (include "speakeasy-registry.fullname" .) "letsencrypt" }}
    acme.cert-manager.io/http01-edit-in-place: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  labels:
    {{- include "speakeasy-registry.labels" . | nindent 4 }}
spec:
  tls:
    - hosts:
        {{- range $v := .Values.registry.ingress.grpcHostnames }}
        - {{ $v }}
        {{- end }}
      secretName: nginx-letsencrypt-grpc
  rules:
    {{- range $v := .Values.registry.ingress.grpcHostnames }}
    - host: {{ $v }}
      http:
        paths:
          - backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: 90
            path: /
            pathType: Prefix
    {{- end }}
{{- end }}