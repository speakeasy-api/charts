# Value of the SPEAKEASY_ENVIRONMENT env var in registry and web containers.
# Used in config loading, sourcing the right google identity platform api key/auth domain, and setting
# the appropriate server URL for the web to establish connection with registry.
# When hosting Speakeasy in your own network, this value should be set to 'hosted'
env: hosted

# Cloud to deploy Speakeasy in
cloud: gcp

# Overrides all values to set speakeasy-registry.fullname (prefixes most resources names)
fullnameOverride: ""

# Registry service hosting the Speakeasy API
registry:
  # Environment variables to expose in the Speakeasy deployment
  # envVars:
  #   - key: EXAMPLE_ENV_VAR_KEY
  #     value: EXAMPLE_ENV_VAR_VALUE
  image:
    # Please override with latest stable version
    tag: sha-350241f
  # Secret containing the service account key file for the registry
  svcSecret: registry-service-account-secret
  ingress:
    # If true, *Hostnames values below must also be set.
    # Deploys an ingress for the registry API if both the above criteria are met
    enabled: false
    # List of domain names for registry api, only used if registry.ingress.enabled is set to true
    #apiHostnames:
    #- api.selfhostspeakeasy.com

    # List of domain names for registry web UI, only used if registry.ingress.enabled is set to true
    #webHostnames:
    #- www.selfhostspeakeasy.com
    #- selfhostspeakeasy.com

    # List of domain names for registry embed-fixture UI, only used if registry.ingress.enabled is set to true
    #embedFixtureHostnames:
    #- embed.www.selfhostspeakeasy.com
    #- embed.selfhostspeakeasy.com

    # List of domain names for gRPC service used for request capture
    #grpcHostnames:
    #- grpc.selfhostspeakeasy.com

  # cloudsql integration is still in progress, do not enable.
  cloudsql:
    enabled: false
  # cloudsql connection string to be used by cloudproxy. connectionString needs to be set if cloudsql.enabled = true
  # connectionString: "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

  # used by managed speakeasy to send invites to the platform. No need to set this value for selfhosted speakeasy
  # sendGridKey: "**********"

# Notification Emails for Infrastructure Configuration (e.g. LetsEncrypt)
# This is the email updates to manage the LetsEncrypt certificate (90 day expiration) will be sent to
# notificationEmail: "anuraag@speakeasyapi.dev"
cert-manager:
  enabled: false
  installCRDs: true
  podDnsPolicy: None
  podDnsConfig:
    nameservers:
      - 8.8.8.8
      - 1.1.1.1
      - 208.67.222.222

portal:
  enabled: true
  # The wildcard domain that will route to the self-serve portal
  portalWildcardDomain: ""
  # Provider name for external-dns (cloudDNS | route53) (https://github.com/bitnami/charts/tree/main/bitnami/external-dns)
  provider: cloudDNS
  # Required properties for cloudDNS
  #project: ""
  #serviceAccountSecretRef:
  #  name:""
  #  key: ""
  # Required properties for route53
  #region: us-east-1
  #role: ""
  # Required properties for route53 with ambient credentials
  #hostedZoneID: ""
  # Required properties for route53 with explicit credentials
  #secretKeyID: ""
  #secretAccessKeySecret:
  #  name: ""
  #  key: ""

bigquery:
  # GCP project containing Bigquery bounded/unbounded request tables
  # If this value is specified, these Bigquery tables will store request/response capture data from the configured
  # SDK instead of Postgres
  ProjectID: ""
  # gcloud dataset containing Bigquery bounded/unbounded request tables
  DatasetID: ""

# Auth required for user management. All values in this block are examples that should be replaced.
auth:
  # The full URL to the Speakeasy homepage the user will be redirected to upon signing in
  SignInURL: "https://www.selfhostspeakeasy.com"
  # Client ID of the Github Oauth app
  GithubClientId: "b0234253z345c"
  # Client secret of the Github Oauth app
  GithubClientSecret: "*****************"
  # The callback URL
  GithubCallbackURL: "https://api.selfhostspeakeasy.com/v1/auth/callback/github"

# Postgresql for Speakeasy to store app-specific config and requests from the SDK capture
postgresql:
  # If true, postgresql will be deployed with PVs backed by the default StorageClass for the underlying cloud provider
  # NOTE: For self-hosting, it is recommended this is only set to true for testing. A separate data source outside the
  # lifecycle of Speakeasy should be maintained following best practices for its usage and maintenance.
  enabled: false
  # Connection string for a particular data source to store Speakeasy-maintained config and requests
  DSN: postgres://postgres:postgres@127.0.0.1:5432/postgres?sslmode=disable
  auth:
    postgresPassword: "postgres"
  primary:
    service:
      type: LoadBalancer
      # static IP of Postgresql LoadBalancer service
      # loadBalancerIP:

# -- [ingress-nginx documentation](https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap)
ingress-nginx:
  controller:
      config:
        use-forwarded-headers: "true"
        use-http2: "true"

# datadog integration is still in progress, do not enable.
datadog:
  #if true, speakeasy will be monitored using datadog
  enabled: false
  datadog:
   site: datadoghq.com
   apiKey: "***********"
   logs:
     enabled: true
     containerCollectAll: true
